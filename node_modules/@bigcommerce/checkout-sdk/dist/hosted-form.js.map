{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///./src/common/error/errors/missing-data-error.ts","webpack:///./src/payment/payment-request-transformer.ts","webpack:///./src/payment/payment-request-sender.ts","webpack:///./src/coupon/map-to-internal-gift-certificate.ts","webpack:///./src/common/iframe/iframe-event-poster.ts","webpack:///./src/common/iframe/iframe-event-listener.ts","webpack:///./src/hosted-form/errors/invalid-hosted-form-config-error.ts","webpack:///./src/hosted-form/errors/invalid-hosted-form-value-error.ts","webpack:///./src/hosted-form/hosted-field-type.ts","webpack:///./src/hosted-form/iframe-content/map-to-autocomplete-type.ts","webpack:///./src/hosted-form/iframe-content/hosted-autocomplete-fieldset.ts","webpack:///./src/hosted-form/iframe-content/hosted-input.ts","webpack:///./src/hosted-form/iframe-content/hosted-card-expiry-input.ts","webpack:///./src/hosted-form/iframe-content/hosted-card-number-input.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-aggregator.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-payment-handler.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-validator.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-factory.ts","webpack:///./src/hosted-form/iframe-content/map-to-accessibility-label.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-initializer.ts","webpack:///./src/hosted-form/iframe-content/initialize-hosted-input.ts","webpack:///./src/hosted-form/iframe-content/notify-initialize-error.ts","webpack:///./src/bundles/hosted-form.ts","webpack:///external \"lodash\"","webpack:///./src/common/error/errors/standard-error.ts","webpack:///./src/common/utility/set-prototype-of.ts","webpack:///external \"card-validator\"","webpack:///external \"rxjs\"","webpack:///./src/payment/is-vaulted-instrument.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-events.ts","webpack:///./src/common/iframe/is-iframe-event.ts","webpack:///./src/common/error/errors/invalid-argument-error.ts","webpack:///./src/payment/payment-method-types.ts","webpack:///./src/address/map-to-internal-address.ts","webpack:///./src/billing/is-billing-address-like.ts","webpack:///./src/cart/map-to-internal-line-items.ts","webpack:///./src/cart/map-gift-certificate-to-internal-line-item.ts","webpack:///./src/hosted-form/hosted-field-events.ts","webpack:///./src/cart/map-to-internal-line-item.ts","webpack:///./src/shipping/map-to-internal-shipping-option.ts","webpack:///./src/common/utility/amount-transformer.ts","webpack:///./src/common/url/parse-url.ts","webpack:///external \"yup\"","webpack:///external \"rxjs/operators\"","webpack:///./src/common/utility/bind-decorator.ts","webpack:///./src/customer/map-to-internal-customer.ts","webpack:///./src/order/map-to-internal-order.ts","webpack:///./src/cart/map-to-internal-cart.ts","webpack:///./src/promotion/map-to-discount-notifications.ts","webpack:///external \"@bigcommerce/bigpay-client\"","webpack:///./src/hosted-form/iframe-content/card-expiry-formatter.ts","webpack:///./src/hosted-form/iframe-content/card-number-formatter.ts","webpack:///./src/coupon/map-to-internal-coupon.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","MissingDataErrorType","subtype","type","MissingBillingAddress","MissingCart","MissingConsignments","MissingCheckout","MissingCheckoutConfig","MissingOrderConfig","MissingOrder","MissingOrderId","MissingPayment","MissingPaymentToken","MissingPaymentMethod","MissingShippingAddress","getErrorMessage","_cardExpiryFormatter","_cardNumberFormatter","transform","payment","checkoutState","billingAddress","getBillingAddress","checkout","getCheckout","customer","getCustomer","order","getOrder","paymentMethod","paymentMethods","getPaymentMethod","methodId","gatewayId","shippingAddress","getShippingAddress","consignments","getConsignments","shippingOption","getShippingOption","storeConfig","config","getStoreConfig","contextConfig","getContextConfig","instrumentMeta","instruments","getInstrumentsMeta","paymentMeta","getPaymentMethodsMeta","orderMeta","getOrderMeta","internalCustomer","authToken","paymentData","getPaymentToken","vaultAccessToken","this","_transformPaymentMethod","cart","quoteMeta","request","geoCountryCode","source","store","storeProfile","transformWithHostedFormData","values","data","paymentMethodMeta","consignment","selectedShippingOption","_transformHostedInputValues","context","method","gateway","initializationData","id","ccCvv","cardCodeVerification","ccNumber","cardNumberVerification","unformat","cardCode","ccExpiry","toObject","cardExpiry","ccName","cardName","cardNumber","_client","submitPayment","payload","Promise","resolve","reject","error","response","_transformResponse","initializeOffsitePayment","target","headers","body","status","statusText","mapToInternalGiftCertificate","giftCertificate","code","discountedAmount","used","remainingBalance","remaining","balance","purchaseDate","targetOrigin","_targetWindow","_targetOrigin","origin","post","event","options","window","Error","result","pipe","successType","errorType","indexOf","toPromise","postMessage","setTarget","sourceOrigin","_sourceOrigin","_isListening","_listeners","listen","addEventListener","_handleMessage","stopListen","removeEventListener","addListener","listener","listeners","push","removeListener","index","splice","trigger","forEach","message","errors","fieldErrors","join","HostedFieldType","mapToAutocompleteType","CardCode","CardExpiry","CardName","CardNumber","_containerId","_fieldTypes","_inputAggregator","_handleChange","targetInput","targetHostedInput","getInputs","find","input","_getAutocompleteElementId","getType","setValue","_inputs","map","_createInput","attach","container","document","getElementById","appendChild","detach","parentElement","removeChild","createElement","autocomplete","tabIndex","style","position","opacity","zIndex","_type","_placeholder","_accessibilityLabel","_autocomplete","_styles","_fontUrls","_eventListener","_eventPoster","_inputValidator","_paymentHandler","_isTouched","_handleInput","_processChange","_handleBlur","_applyStyles","default","_validateForm","Blurred","fieldType","_handleFocus","focus","Focused","_handleValidate","_input","ValidateRequested","SubmitRequested","handle","_configureInput","getValue","isTouched","_loadFonts","parent","hostedInput","AttachSucceeded","_unloadFonts","_formatValue","_notifyChange","_value","Changed","backgroundColor","border","display","height","margin","outline","padding","width","placeholder","setAttribute","styles","allowedStyles","color","fontFamily","fontSize","fontWeight","keys","_fontLinks","filter","url","hostname","querySelector","link","rel","href","head","undefined","getInputValues","validate","results","isValid","Validated","_previousValue","containerId","accessibilityLabel","fontUrls","eventListener","eventPoster","inputAggregator","inputValidator","paymentHandler","_formatter","format","_autocompleteFieldset","cardInfo","card","prevCardInfo","CardTypeChanged","cardType","bin","length","isPotentiallyValid","substr","BinChanged","selectionEnd","formattedValue","setSelectionRange","_parentWindow","Array","slice","frames","reduce","frame","DOMException","_paymentRequestSender","_paymentRequestTransformer","SubmitFailed","SubmitSucceeded","_isPaymentErrorResponse","_cardInstrument","_configureCardValidator","requiredFields","schemas","_getCardCodeSchema","CardCodeVerification","_getCardCodeVerificationSchema","_getCardExpirySchema","_getCardNameSchema","_getCardNumberSchema","CardNumberVerification","_getCardNumberVerificationSchema","abortEarly","inner","innerError","path","discoverInfo","getTypeInfo","visaInfo","updateCard","lengths","patterns","required","test","size","_mapFromInstrumentCardType","brand","max","last4","_parentOrigin","cardInstrument","mapToAccessibilityLabel","_createNumberInput","_createExpiryInput","_createPaymentHandler","_factory","initialize","_resetPageStyles","AttachRequested","field","node","overflow","initializeHostedInput","parentOrigin","poster","notifyInitializeError","AttachFailed","setPrototypeOf","__proto__","captureStackTrace","stack","isVaultedInstrument","instrument","Boolean","instrumentId","isHostedVaultedInstrument","isFormattedVaultedInstrument","formattedInstrument","formattedPayload","bigpay_token","token","HostedInputEventType","isIframeEvent","HOSTED","OFFLINE","mapToInternalAddress","address","addressId","isBillingAddressLike","firstName","lastName","company","addressLine1","address1","addressLine2","address2","city","province","stateOrProvince","provinceCode","stateOrProvinceCode","postCode","postalCode","country","countryCode","phone","customFields","mapToInternalLineItems","itemMap","decimalPlaces","idKey","item","amountTransformer","imageUrl","amount","amountAfterDiscount","discount","integerAmount","toInteger","integerAmountAfterDiscount","integerUnitPrice","integerUnitPriceAfterDiscount","integerDiscount","quantity","sender","recipient","attributes","variantId","mapGiftCertificateToInternalLineItem","mapToInternalLineItemType","HostedFieldEventType","mapToInternalLineItem","extendedListPrice","extendedSalePrice","discountAmount","listPrice","salePrice","downloadsPageUrl","downloadPageUrl","sku","categoryNames","productId","option","addedByPromotion","mapToInternalShippingOption","isSelected","description","price","cost","selected","isRecommended","transitTime","_decimalPlaces","Math","round","pow","parseUrl","anchor","port","hash","protocol","pathname","search","bindMethodDecorator","_","descriptor","boundMethod","set","decoratedTarget","getOwnPropertyNames","getOwnPropertyDescriptor","bindClassDecorator","mapToInternalCustomer","addresses","customerId","isGuest","storeCredit","email","fullName","customerGroupName","customerGroup","mapToInternalOrder","payments","items","currency","orderId","lineItems","customerCanBeCreated","mapToInternalOrderPayment","subtotal","baseAmount","coupon","coupons","sum","orderToken","callbackUrl","discountNotifications","providerId","totalDiscountedAmount","appliedGiftCertificates","detail","socialData","mapToInternalSocialDataList","hasDigitalItems","isDownloadable","isComplete","shipping","shippingCostTotal","amountBeforeDiscount","shippingCostBeforeDiscount","integerAmountBeforeDiscount","mapToStoreCredit","taxes","taxTotal","handling","handlingCostTotal","grandTotal","orderAmount","orderAmountAsInteger","mapToInternalPaymentStatus","isDefaultOrderPayment","step","helpText","instructions","returnUrl","socialDataObject","physicalItems","digitalItems","lineItem","socialMedia","image","shareText","text","sharingLink","channelName","channel","channelCode","mapToInternalCart","promotions","notifications","promotion","banners","banner","placeholders","discountType","messageHtml","giftCertificates","certificate","isShippingRequired","taxSubtotal","month","year","trimmedMonth","trimmedYear","maxLength","info","unformattedValue","gaps","gapIndex","output","replace","RegExp","couponTypes","mapToInternalCoupon","displayName","couponType"],"mappings":"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","file":"hosted-form.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 171);\n","module.exports = require(\"tslib\");","import StandardError from './standard-error';\n\nexport enum MissingDataErrorType {\n    MissingBillingAddress,\n    MissingCart,\n    MissingCheckout,\n    MissingConsignments,\n    MissingCheckoutConfig,\n    MissingOrder,\n    MissingOrderConfig,\n    MissingOrderId,\n    MissingPayment,\n    MissingPaymentInstrument,\n    MissingPaymentMethod,\n    MissingPaymentToken,\n    MissingShippingAddress,\n}\n\n/**\n * Throw this error when data that is expected to exist is missing. Usually it\n * is due to the fact that certain data has not been retrieved from or saved to\n * the server yet. And such data is required to perform certain actions.\n */\nexport default class MissingDataError extends StandardError {\n    constructor(\n        public subtype: MissingDataErrorType\n    ) {\n        super(getErrorMessage(subtype));\n\n        this.name = 'MissingDataError';\n        this.type = 'missing_data';\n    }\n}\n\nfunction getErrorMessage(type: MissingDataErrorType): string {\n    switch (type) {\n    case MissingDataErrorType.MissingBillingAddress:\n        return 'Unable to proceed because billing address data is unavailable.';\n\n    case MissingDataErrorType.MissingCart:\n        return 'Unable to proceed because cart data is unavailable.';\n\n    case MissingDataErrorType.MissingConsignments:\n        return 'Unable to proceed because consignments data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckout:\n        return 'Unable to proceed because checkout data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckoutConfig:\n    case MissingDataErrorType.MissingOrderConfig:\n        return 'Unable to proceed because configuration data is unavailable.';\n\n    case MissingDataErrorType.MissingOrder:\n        return 'Unable to proceed because order data is unavailable.';\n\n    case MissingDataErrorType.MissingOrderId:\n        return 'Unable to proceed because order ID is unavailable or not generated yet.';\n\n    case MissingDataErrorType.MissingPayment:\n        return 'Unable to proceed because payment data is unavailable.';\n\n    case MissingDataErrorType.MissingPaymentToken:\n        return 'Unable to proceed because the token required to submit a payment is missing.';\n\n    case MissingDataErrorType.MissingPaymentMethod:\n        return 'Unable to proceed because payment method data is unavailable or not properly configured.';\n\n    case MissingDataErrorType.MissingShippingAddress:\n        return 'Unable to proceed because shipping address data is unavailable.';\n\n    default:\n        return 'Unable to proceed because the required data is unavailable.';\n    }\n}\n","import { pick } from 'lodash';\n\nimport { mapToInternalAddress } from '../address';\nimport { mapToInternalCart } from '../cart';\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { mapToInternalCustomer } from '../customer';\nimport { HostedFormOrderData } from '../hosted-form';\nimport { CardExpiryFormatter, CardNumberFormatter, HostedInputValues } from '../hosted-form/iframe-content';\nimport { mapToInternalOrder } from '../order';\nimport { mapToInternalShippingOption } from '../shipping';\n\nimport isVaultedInstrument, { isFormattedVaultedInstrument } from './is-vaulted-instrument';\nimport Payment, { CreditCardInstrument, HostedCreditCardInstrument, HostedVaultedInstrument, VaultedInstrument } from './payment';\nimport PaymentMethod from './payment-method';\nimport PaymentRequestBody from './payment-request-body';\n\nexport default class PaymentRequestTransformer {\n    private _cardExpiryFormatter = new CardExpiryFormatter();\n    private _cardNumberFormatter = new CardNumberFormatter();\n\n    transform(payment: Payment, checkoutState: InternalCheckoutSelectors): PaymentRequestBody {\n        const billingAddress = checkoutState.billingAddress.getBillingAddress();\n        const checkout = checkoutState.checkout.getCheckout();\n        const customer = checkoutState.customer.getCustomer();\n        const order = checkoutState.order.getOrder();\n        const paymentMethod = checkoutState.paymentMethods.getPaymentMethod(payment.methodId, payment.gatewayId);\n        const shippingAddress = checkoutState.shippingAddress.getShippingAddress();\n        const consignments = checkoutState.consignments.getConsignments();\n        const shippingOption = checkoutState.consignments.getShippingOption();\n        const storeConfig = checkoutState.config.getStoreConfig();\n        const contextConfig = checkoutState.config.getContextConfig();\n        const instrumentMeta = checkoutState.instruments.getInstrumentsMeta();\n        const paymentMeta = checkoutState.paymentMethods.getPaymentMethodsMeta();\n        const orderMeta = checkoutState.order.getOrderMeta();\n        const internalCustomer = customer && billingAddress && mapToInternalCustomer(customer, billingAddress);\n\n        const authToken = instrumentMeta && payment.paymentData &&\n            (isVaultedInstrument(payment.paymentData) || isFormattedVaultedInstrument(payment.paymentData)) ?\n            `${checkoutState.payment.getPaymentToken()}, ${instrumentMeta.vaultAccessToken}` :\n            checkoutState.payment.getPaymentToken();\n\n        if (!authToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentToken);\n        }\n\n        return {\n            authToken,\n            paymentMethod: paymentMethod && this._transformPaymentMethod(paymentMethod),\n            customer: internalCustomer,\n            billingAddress: billingAddress && mapToInternalAddress(billingAddress),\n            shippingAddress: shippingAddress && mapToInternalAddress(shippingAddress, consignments),\n            shippingOption: shippingOption && mapToInternalShippingOption(shippingOption, true),\n            cart: checkout && mapToInternalCart(checkout),\n            order: order && mapToInternalOrder(order, orderMeta),\n            orderMeta,\n            payment: payment.paymentData,\n            quoteMeta: {\n                request: {\n                    ...paymentMeta,\n                    geoCountryCode: contextConfig && contextConfig.geoCountryCode,\n                },\n            },\n            source: 'bigcommerce-checkout-js-sdk',\n            store: pick(storeConfig && storeConfig.storeProfile, [\n                'storeHash',\n                'storeId',\n                'storeLanguage',\n                'storeName',\n            ]),\n        };\n    }\n\n    transformWithHostedFormData(values: HostedInputValues, data: HostedFormOrderData): PaymentRequestBody {\n        const { authToken, checkout, config, order, orderMeta, payment = {}, paymentMethod, paymentMethodMeta } = data;\n        const consignment = checkout && checkout.consignments[0];\n        const shippingAddress = consignment && consignment.shippingAddress;\n        const shippingOption = consignment && consignment.selectedShippingOption;\n\n        return {\n            authToken,\n            paymentMethod: paymentMethod && this._transformPaymentMethod(paymentMethod),\n            customer: order && order.billingAddress && checkout && mapToInternalCustomer(checkout.customer, order.billingAddress),\n            billingAddress: order && order.billingAddress && mapToInternalAddress(order.billingAddress),\n            shippingAddress: shippingAddress && checkout && mapToInternalAddress(shippingAddress, checkout.consignments),\n            shippingOption: shippingOption && mapToInternalShippingOption(shippingOption, true),\n            cart: checkout && mapToInternalCart(checkout),\n            order: order && mapToInternalOrder(order, orderMeta),\n            orderMeta,\n            payment: this._transformHostedInputValues(values, payment),\n            quoteMeta: {\n                request: {\n                    ...paymentMethodMeta,\n                    geoCountryCode: config && config.context.geoCountryCode,\n                },\n            },\n            source: 'bigcommerce-checkout-js-sdk',\n            store: config && pick(config.storeConfig.storeProfile, [\n                'storeHash',\n                'storeId',\n                'storeLanguage',\n                'storeName',\n            ]),\n        };\n    }\n\n    private _transformPaymentMethod(paymentMethod: PaymentMethod): PaymentMethod {\n        if (paymentMethod.method === 'multi-option' && !paymentMethod.gateway) {\n            return { ...paymentMethod, gateway: paymentMethod.id };\n        }\n\n        if (paymentMethod.initializationData && paymentMethod.initializationData.gateway) {\n            return { ...paymentMethod, id: paymentMethod.initializationData.gateway };\n        }\n\n        return paymentMethod;\n    }\n\n    private _transformHostedInputValues(values: HostedInputValues, payment: HostedCreditCardInstrument | HostedVaultedInstrument): CreditCardInstrument | VaultedInstrument {\n        return 'instrumentId' in payment ?\n            {\n                ...payment,\n                ccCvv: values.cardCodeVerification,\n                ccNumber: values.cardNumberVerification && this._cardNumberFormatter.unformat(values.cardNumberVerification),\n            } :\n            {\n                ...payment,\n                ccCvv: values.cardCode,\n                ccExpiry: this._cardExpiryFormatter.toObject(values.cardExpiry || ''),\n                ccName: values.cardName || '',\n                ccNumber: this._cardNumberFormatter.unformat(values.cardNumber || ''),\n            };\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport PaymentRequestBody from './payment-request-body';\n\n/**\n * @todo Convert this file into TypeScript properly\n */\nexport default class PaymentRequestSender {\n    /**\n     * @constructor\n     * @param {BigpayClient} client\n     */\n    constructor(\n        private _client: any\n    ) {}\n\n    submitPayment(payload: PaymentRequestBody): Promise<Response> {\n        return new Promise((resolve, reject) => {\n            this._client.submitPayment(payload, (error: any, response: any) => {\n                if (error) {\n                    reject(this._transformResponse(error));\n                } else {\n                    resolve(this._transformResponse(response));\n                }\n            });\n        });\n    }\n\n    initializeOffsitePayment(payload: PaymentRequestBody, target?: string): Promise<void> {\n        return new Promise(() => {\n            this._client.initializeOffsitePayment(payload, null, target);\n        });\n    }\n\n    private _transformResponse(response: any): Response {\n        return {\n            headers: response.headers,\n            body: response.data,\n            status: response.status,\n            statusText: response.statusText,\n        };\n    }\n}\n","import GiftCertificate from './gift-certificate';\nimport InternalGiftCertificate from './internal-gift-certificate';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalGiftCertificate(giftCertificate: GiftCertificate): InternalGiftCertificate {\n    return {\n        code: giftCertificate.code,\n        discountedAmount: giftCertificate.used,\n        remainingBalance: giftCertificate.remaining,\n        giftCertificate: {\n            balance: giftCertificate.balance,\n            code: giftCertificate.code,\n            purchaseDate: giftCertificate.purchaseDate,\n        },\n    };\n}\n","import { fromEvent } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { parseUrl } from '../url';\n\nimport IframeEvent from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport interface IframeEventPostOptions<TSuccessEvent extends IframeEvent, TErrorEvent extends IframeEvent> {\n    errorType?: TErrorEvent['type'];\n    successType?: TSuccessEvent['type'];\n}\n\nexport default class IframeEventPoster<TEvent> {\n    private _targetOrigin: string;\n\n    constructor(\n        targetOrigin: string,\n        private _targetWindow?: Window\n    ) {\n        this._targetOrigin = targetOrigin === '*' ? '*' : parseUrl(targetOrigin).origin;\n    }\n\n    post(event: TEvent): void;\n    post<TSuccessEvent extends IframeEvent = IframeEvent, TErrorEvent extends IframeEvent = IframeEvent>(\n        event: TEvent,\n        options: IframeEventPostOptions<TSuccessEvent, TErrorEvent>\n    ): Promise<TSuccessEvent>;\n    post<TSuccessEvent extends IframeEvent = IframeEvent, TErrorEvent extends IframeEvent = IframeEvent>(\n        event: TEvent,\n        options?: IframeEventPostOptions<TSuccessEvent, TErrorEvent>\n    ): Promise<TSuccessEvent> | void {\n        if (window === this._targetWindow) {\n            return;\n        }\n\n        if (!this._targetWindow) {\n            throw new Error('Unable to post message because target window is not set.');\n        }\n\n        const result = options && fromEvent<MessageEvent>(window, 'message')\n            .pipe(\n                filter(event =>\n                    event.origin === this._targetOrigin &&\n                    isIframeEvent(event.data, event.data.type) &&\n                    [options.successType, options.errorType].indexOf(event.data.type) !== -1\n                ),\n                map(event => {\n                    if (options.errorType === event.data.type) {\n                        throw event.data;\n                    }\n\n                    return event.data;\n                }),\n                take(1)\n            )\n            .toPromise();\n\n        this._targetWindow.postMessage(event, this._targetOrigin);\n\n        return result;\n    }\n\n    setTarget(window: Window) {\n        this._targetWindow = window;\n    }\n}\n","import { parseUrl } from '../url';\nimport { bindDecorator as bind } from '../utility';\n\nimport { IframeEventMap } from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport default class IframeEventListener<TEventMap extends IframeEventMap<keyof TEventMap>> {\n    private _isListening: boolean;\n    private _listeners: EventListeners<TEventMap>;\n    private _sourceOrigin: string;\n\n    constructor(\n        sourceOrigin: string\n    ) {\n        this._sourceOrigin = parseUrl(sourceOrigin).origin;\n        this._isListening = false;\n        this._listeners = {};\n    }\n\n    listen(): void {\n        if (this._isListening) {\n            return;\n        }\n\n        this._isListening = true;\n\n        window.addEventListener('message', this._handleMessage);\n    }\n\n    stopListen(): void {\n        if (!this._isListening) {\n            return;\n        }\n\n        this._isListening = false;\n\n        window.removeEventListener('message', this._handleMessage);\n    }\n\n    addListener<TType extends keyof TEventMap>(type: TType, listener: (event: TEventMap[TType]) => void): void {\n        let listeners = this._listeners[type];\n\n        if (!listeners) {\n            this._listeners[type] = listeners = [];\n        }\n\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    }\n\n    removeListener<TType extends keyof TEventMap>(type: TType, listener: (event: TEventMap[TType]) => void): void {\n        const listeners = this._listeners[type];\n\n        if (!listeners) {\n            return;\n        }\n\n        const index = listeners.indexOf(listener);\n\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n\n    trigger<TType extends keyof TEventMap>(event: TEventMap[TType]): void {\n        const listeners = this._listeners[event.type];\n\n        if (!listeners) {\n            return;\n        }\n\n        listeners.forEach(listener => listener(event));\n    }\n\n    @bind\n    private _handleMessage(event: MessageEvent): void {\n        if ((event.origin !== this._sourceOrigin) ||\n            !isIframeEvent(event.data as TEventMap[keyof TEventMap], event.data.type)\n        ) {\n            return;\n        }\n\n        this.trigger(event.data);\n    }\n}\n\ntype EventListeners<TEventMap> = {\n    [key in keyof TEventMap]?: Array<(event: TEventMap[key]) => void>;\n};\n","import { StandardError } from '../../common/error/errors';\n\nexport default class InvalidHostedFormConfigError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to proceed due to invalid configuration provided for the hosted payment form.');\n\n        this.name = 'InvalidHostedFormConfigError';\n        this.type = 'invalid_hosted_form_config';\n    }\n}\n","import { flatMap, map, values } from 'lodash';\n\nimport { StandardError } from '../../common/error/errors';\nimport { HostedInputValidateErrorDataMap } from '../iframe-content';\n\nexport default class InvalidHostedFormValueError extends StandardError {\n    constructor(\n        public errors: HostedInputValidateErrorDataMap\n    ) {\n        super([\n            'Unable to proceed due to invalid user input values',\n            ...flatMap(values(errors), fieldErrors => map(fieldErrors, ({ message }) => message)),\n        ].join('. '));\n\n        this.name = 'InvalidHostedFormValueError';\n        this.type = 'invalid_hosted_form_value';\n    }\n}\n","enum HostedFieldType {\n    CardCode = 'cardCode',\n    CardCodeVerification = 'cardCodeVerification',\n    CardExpiry = 'cardExpiry',\n    CardName = 'cardName',\n    CardNumber = 'cardNumber',\n    CardNumberVerification = 'cardNumberVerification',\n}\n\nexport default HostedFieldType;\n","import HostedFieldType from '../hosted-field-type';\n\nexport default function mapToAutocompleteType(type: HostedFieldType): string {\n    switch (type) {\n    case HostedFieldType.CardCode:\n        return 'cc-csc';\n\n    case HostedFieldType.CardExpiry:\n        return 'cc-exp';\n\n    case HostedFieldType.CardName:\n        return 'cc-name';\n\n    case HostedFieldType.CardNumber:\n        return 'cc-number';\n\n    default:\n        return '';\n    }\n}\n","import { kebabCase } from 'lodash';\n\nimport { InvalidHostedFormConfigError } from '../errors';\nimport HostedFieldType from '../hosted-field-type';\n\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport mapToAutocompleteType from './map-to-autocomplete-type';\n\nexport default class HostedAutocompleteFieldset {\n    private _inputs: HTMLInputElement[];\n\n    constructor(\n        private _containerId: string,\n        private _fieldTypes: HostedFieldType[],\n        private _inputAggregator: HostedInputAggregator\n    ) {\n        this._inputs = this._fieldTypes.map(type => this._createInput(type));\n    }\n\n    attach(): void {\n        const container = document.getElementById(this._containerId);\n\n        if (!container) {\n            throw new InvalidHostedFormConfigError('Unable to proceed because the provided container ID is not valid.');\n        }\n\n        this._inputs.forEach(input => container.appendChild(input));\n    }\n\n    detach(): void {\n        this._inputs.forEach(input => {\n            if (!input.parentElement) {\n                return;\n            }\n\n            input.parentElement.removeChild(input);\n        });\n    }\n\n    private _createInput(type: HostedFieldType): HTMLInputElement {\n        const input = document.createElement('input');\n\n        input.autocomplete = mapToAutocompleteType(type);\n        input.id = this._getAutocompleteElementId(type);\n        input.tabIndex = -1;\n        input.style.position = 'absolute';\n        input.style.opacity = '0';\n        input.style.zIndex = '-1';\n\n        input.addEventListener('change', this._handleChange);\n\n        return input;\n    }\n\n    private _handleChange: (event: Event) => void = event => {\n        const targetInput = event.target as HTMLInputElement;\n\n        if (!targetInput) {\n            throw new Error('Unable to get a reference to the target of the change event.');\n        }\n\n        const targetHostedInput = this._inputAggregator.getInputs()\n            .find(input => this._getAutocompleteElementId(input.getType()) === targetInput.id);\n\n        if (!targetHostedInput) {\n            return;\n        }\n\n        targetHostedInput.setValue(targetInput.value);\n    };\n\n    private _getAutocompleteElementId(type: HostedFieldType): string {\n        return `autocomplete-${kebabCase(type)}`;\n    }\n}\n","import { kebabCase } from 'lodash';\n\nimport { IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { parseUrl } from '../../common/url';\nimport { InvalidHostedFormConfigError } from '../errors';\nimport { HostedFieldEventMap, HostedFieldEventType, HostedFieldValidateRequestEvent } from '../hosted-field-events';\nimport HostedFieldType from '../hosted-field-type';\n\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\nimport HostedInputStyles, { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\nimport HostedInputWindow from './hosted-input-window';\n\nexport default class HostedInput {\n    protected _input: HTMLInputElement;\n    protected _previousValue?: string;\n    private _fontLinks?: HTMLLinkElement[];\n    private _isTouched: boolean = false;\n\n    /**\n     * @internal\n     */\n    constructor(\n        protected _type: HostedFieldType,\n        protected _containerId: string,\n        protected _placeholder: string,\n        protected _accessibilityLabel: string,\n        protected _autocomplete: string,\n        protected _styles: HostedInputStylesMap,\n        protected _fontUrls: string[],\n        protected _eventListener: IframeEventListener<HostedFieldEventMap>,\n        protected _eventPoster: IframeEventPoster<HostedInputEvent>,\n        protected _inputAggregator: HostedInputAggregator,\n        protected _inputValidator: HostedInputValidator,\n        protected _paymentHandler: HostedInputPaymentHandler\n    ) {\n        this._input = document.createElement('input');\n\n        this._input.addEventListener('input', this._handleInput);\n        this._input.addEventListener('blur', this._handleBlur);\n        this._input.addEventListener('focus', this._handleFocus);\n        this._eventListener.addListener(HostedFieldEventType.ValidateRequested, this._handleValidate);\n        this._eventListener.addListener(HostedFieldEventType.SubmitRequested, this._paymentHandler.handle);\n\n        this._configureInput();\n    }\n\n    getType(): HostedFieldType {\n        return this._type;\n    }\n\n    getValue(): string {\n        return this._input.value;\n    }\n\n    setValue(value: string): void {\n        this._processChange(value);\n    }\n\n    isTouched(): boolean {\n        return this._isTouched;\n    }\n\n    attach(): void {\n        const container = document.getElementById(this._containerId);\n\n        if (!container) {\n            throw new InvalidHostedFormConfigError('Unable to proceed because the provided container ID is not valid.');\n        }\n\n        container.appendChild(this._input);\n\n        this._loadFonts();\n\n        this._eventPoster.setTarget(window.parent);\n        this._eventListener.listen();\n\n        // Assign itself to the global so it can be accessed by its sibling frames\n        (window as unknown as HostedInputWindow).hostedInput = this;\n\n        this._eventPoster.post({ type: HostedInputEventType.AttachSucceeded });\n    }\n\n    detach(): void {\n        if (this._input.parentElement) {\n            this._input.parentElement.removeChild(this._input);\n        }\n\n        this._unloadFonts();\n\n        this._eventListener.stopListen();\n    }\n\n    protected _formatValue(value: string): void {\n        this._input.value = value;\n    }\n\n    protected _notifyChange(_value: string): void {\n        this._eventPoster.post({\n            type: HostedInputEventType.Changed,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    }\n\n    private _configureInput(): void {\n        this._input.style.backgroundColor = 'transparent';\n        this._input.style.border = '0';\n        this._input.style.display = 'block';\n        this._input.style.height = '100%';\n        this._input.style.margin = '0';\n        this._input.style.outline = 'none';\n        this._input.style.padding = '0';\n        this._input.style.width = '100%';\n        this._input.id = kebabCase(this._type);\n        this._input.placeholder = this._placeholder;\n        this._input.autocomplete = this._autocomplete;\n\n        this._input.setAttribute('aria-label', this._accessibilityLabel);\n\n        this._applyStyles(this._styles.default);\n    }\n\n    private _applyStyles(styles: HostedInputStyles = {}): void {\n        const allowedStyles: { [key in keyof Required<HostedInputStyles>]: HostedInputStyles[key] } = {\n            color: styles.color,\n            fontFamily: styles.fontFamily,\n            fontSize: styles.fontSize,\n            fontWeight: styles.fontWeight,\n        };\n        const styleKeys = Object.keys(allowedStyles) as Array<keyof HostedInputStyles>;\n\n        styleKeys.forEach(key => {\n            if (!allowedStyles[key]) {\n                return;\n            }\n\n            this._input.style[key] = allowedStyles[key] || '';\n        });\n    }\n\n    private _loadFonts(): void {\n        if (this._fontLinks) {\n            return;\n        }\n\n        this._fontLinks = this._fontUrls\n            .filter(url => parseUrl(url).hostname === 'fonts.googleapis.com')\n            .filter(url => !document.querySelector(`link[href='${url}'][rel='stylesheet']`))\n            .map(url => {\n                const link = document.createElement('link');\n\n                link.rel = 'stylesheet';\n                link.href = url;\n\n                document.head.appendChild(link);\n\n                return link;\n            });\n    }\n\n    private _unloadFonts(): void {\n        if (!this._fontLinks) {\n            return;\n        }\n\n        this._fontLinks.forEach(link => {\n            if (!link.parentElement) {\n                return;\n            }\n\n            link.parentElement.removeChild(link);\n        });\n\n        this._fontLinks = undefined;\n    }\n\n    private async _validateForm(): Promise<void> {\n        const values = this._inputAggregator.getInputValues();\n        const results = await this._inputValidator.validate(values);\n\n        if (results.isValid) {\n            this._applyStyles(this._styles.default);\n        } else {\n            this._applyStyles(this._styles.error);\n        }\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Validated,\n            payload: results,\n        });\n    }\n\n    private _processChange(value: string): void {\n        if (value === this._previousValue) {\n            return;\n        }\n\n        this._isTouched = true;\n\n        this._validateForm();\n        this._formatValue(value);\n        this._notifyChange(value);\n\n        this._previousValue = value;\n    }\n\n    private _handleInput: (event: Event) => void = event => {\n        const input = event.target as HTMLInputElement;\n\n        this._processChange(input.value);\n    };\n\n    private _handleBlur: (event: Event) => void = () => {\n        this._applyStyles(this._styles.default);\n        this._validateForm();\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Blurred,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    };\n\n    private _handleFocus: (event: Event) => void = () => {\n        this._applyStyles(this._styles.focus);\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Focused,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    };\n\n    private _handleValidate: (event: HostedFieldValidateRequestEvent) => void = () => {\n        this._validateForm();\n    };\n}\n","import { IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { HostedFieldEventMap } from '../hosted-field-events';\nimport HostedFieldType from '../hosted-field-type';\n\nimport CardExpiryFormatter from './card-expiry-formatter';\nimport HostedInput from './hosted-input';\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent } from './hosted-input-events';\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\nimport { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\n\nexport default class HostedCardExpiryInput extends HostedInput {\n    /**\n     * @internal\n     */\n    constructor(\n        containerId: string,\n        placeholder: string,\n        accessibilityLabel: string,\n        autocomplete: string,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        eventListener: IframeEventListener<HostedFieldEventMap>,\n        eventPoster: IframeEventPoster<HostedInputEvent>,\n        inputAggregator: HostedInputAggregator,\n        inputValidator: HostedInputValidator,\n        paymentHandler: HostedInputPaymentHandler,\n        private _formatter: CardExpiryFormatter\n    ) {\n        super(\n            HostedFieldType.CardExpiry,\n            containerId,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            eventListener,\n            eventPoster,\n            inputAggregator,\n            inputValidator,\n            paymentHandler\n        );\n    }\n\n    protected _formatValue(value: string): void {\n        this._input.value = this._formatter.format(value);\n    }\n}\n","import { number } from 'card-validator';\nimport { get } from 'lodash';\n\nimport { IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { HostedFieldEventMap } from '../hosted-field-events';\nimport HostedFieldType from '../hosted-field-type';\n\nimport CardNumberFormatter from './card-number-formatter';\nimport HostedAutocompleteFieldset from './hosted-autocomplete-fieldset';\nimport HostedInput from './hosted-input';\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\nimport { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\n\nexport default class HostedCardNumberInput extends HostedInput {\n    /**\n     * @internal\n     */\n    constructor(\n        containerId: string,\n        placeholder: string,\n        accessibilityLabel: string,\n        autocomplete: string,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        eventListener: IframeEventListener<HostedFieldEventMap>,\n        eventPoster: IframeEventPoster<HostedInputEvent>,\n        inputAggregator: HostedInputAggregator,\n        inputValidator: HostedInputValidator,\n        paymentHandler: HostedInputPaymentHandler,\n        private _autocompleteFieldset: HostedAutocompleteFieldset,\n        private _formatter: CardNumberFormatter\n    ) {\n        super(\n            HostedFieldType.CardNumber,\n            containerId,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            eventListener,\n            eventPoster,\n            inputAggregator,\n            inputValidator,\n            paymentHandler\n        );\n    }\n\n    attach(): void {\n        super.attach();\n\n        this._autocompleteFieldset.attach();\n    }\n\n    protected _notifyChange(value: string): void {\n        const cardInfo = number(value).card;\n        const prevCardInfo = this._previousValue && number(this._previousValue).card;\n\n        if (get(prevCardInfo, 'type') !== get(cardInfo, 'type')) {\n            this._eventPoster.post({\n                type: HostedInputEventType.CardTypeChanged,\n                payload: {\n                    cardType: cardInfo ? cardInfo.type : undefined,\n                },\n            });\n        }\n\n        const bin = value.length >= 6 && number(value).isPotentiallyValid ? value.substr(0, 6) : '';\n        const prevBin = this._previousValue && this._previousValue.length >= 6 ? this._previousValue.substr(0, 6) : '';\n\n        if (bin !== prevBin) {\n            this._eventPoster.post({\n                type: HostedInputEventType.BinChanged,\n                payload: { bin },\n            });\n        }\n    }\n\n    protected _formatValue(value: string): void {\n        const selectionEnd = this._input.selectionEnd;\n        const formattedValue = this._formatter.format(value);\n\n        if (selectionEnd === value.length && value.length < formattedValue.length) {\n            this._input.setSelectionRange(formattedValue.length, formattedValue.length);\n        } else {\n            this._input.setSelectionRange(selectionEnd || 0, selectionEnd || 0);\n        }\n\n        this._input.value = formattedValue;\n    }\n}\n","import HostedInput from './hosted-input';\nimport HostedInputValues from './hosted-input-values';\nimport HostedInputWindow from './hosted-input-window';\n\nexport default class HostedInputAggregator {\n    constructor(\n        private _parentWindow: Window\n    ) {}\n\n    getInputs(filter?: (field: HostedInput) => boolean): HostedInput[] {\n        return Array.prototype.slice.call(this._parentWindow.frames)\n            .reduce((result: Window[], frame: Window) => {\n                try {\n                    const input = (frame as HostedInputWindow).hostedInput;\n\n                    if (!input || (filter && !filter(input))) {\n                        return result;\n                    }\n\n                    return [...result, input];\n                } catch (error) {\n                    if (error instanceof DOMException) {\n                        return result;\n                    }\n\n                    throw error;\n                }\n            }, []);\n    }\n\n    getInputValues(filter?: (field: HostedInput) => boolean): HostedInputValues {\n        return this.getInputs(filter)\n            .reduce((result, input) => {\n                return {\n                    ...result,\n                    [input.getType()]: input.getValue(),\n                };\n            }, {} as HostedInputValues);\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\nimport { snakeCase } from 'lodash';\n\nimport { PaymentErrorResponseBody } from '../../common/error';\nimport { IframeEventPoster } from '../../common/iframe';\nimport { PaymentRequestSender, PaymentRequestTransformer } from '../../payment';\nimport { InvalidHostedFormValueError } from '../errors';\nimport { HostedFieldSubmitRequestEvent } from '../hosted-field-events';\n\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputValidator from './hosted-input-validator';\n\nexport default class HostedInputPaymentHandler {\n    constructor(\n        private _inputAggregator: HostedInputAggregator,\n        private _inputValidator: HostedInputValidator,\n        private _eventPoster: IframeEventPoster<HostedInputEvent>,\n        private _paymentRequestSender: PaymentRequestSender,\n        private _paymentRequestTransformer: PaymentRequestTransformer\n    ) {}\n\n    handle: (event: HostedFieldSubmitRequestEvent) => Promise<void> = async ({ payload: { data } }) => {\n        const values = this._inputAggregator.getInputValues();\n        const results = await this._inputValidator.validate(values);\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Validated,\n            payload: results,\n        });\n\n        if (!results.isValid) {\n            const error = new InvalidHostedFormValueError(results.errors);\n\n            return this._eventPoster.post({\n                type: HostedInputEventType.SubmitFailed,\n                payload: {\n                    error: { code: snakeCase(error.name), message: error.message },\n                },\n            });\n        }\n\n        try {\n            await this._paymentRequestSender.submitPayment(this._paymentRequestTransformer.transformWithHostedFormData(values, data));\n\n            this._eventPoster.post({ type: HostedInputEventType.SubmitSucceeded });\n        } catch (error) {\n            this._eventPoster.post({\n                type: HostedInputEventType.SubmitFailed,\n                payload: this._isPaymentErrorResponse(error) ?\n                    { error: error.body.errors[0], response: error } :\n                    { error: { code: snakeCase(error.name), message: error.message } },\n            });\n        }\n    };\n\n    private _isPaymentErrorResponse(response: any): response is Response<PaymentErrorResponseBody> {\n        const { body: { errors = [] } = {} } = response || {};\n\n        return (\n            typeof (errors[0] && errors[0].code) === 'string' &&\n            typeof (errors[0] && errors[0].message) === 'string'\n        );\n    }\n}\n","import { creditCardType, cvv, expirationDate, number } from 'card-validator';\nimport { includes } from 'lodash';\nimport { object, string, StringSchema, ValidationError } from 'yup';\n\nimport { CardInstrument } from '../../payment/instrument';\nimport HostedFieldType from '../hosted-field-type';\n\nimport { HostedInputValidateErrorDataMap } from './hosted-input-validate-error-data';\nimport HostedInputValidateResults from './hosted-input-validate-results';\nimport HostedInputValues from './hosted-input-values';\n\nexport default class HostedInputValidator {\n    constructor(\n        private _cardInstrument?: CardInstrument\n    ) {\n        this._configureCardValidator();\n    }\n\n    async validate(values: HostedInputValues): Promise<HostedInputValidateResults> {\n        const requiredFields = Object.keys(values);\n        const schemas: { [key in keyof HostedInputValues]: StringSchema } = {};\n        const results: HostedInputValidateResults = {\n            errors: {},\n            isValid: true,\n        };\n\n        if (includes(requiredFields, HostedFieldType.CardCode)) {\n            schemas.cardCode = this._getCardCodeSchema();\n            results.errors.cardCode = [];\n        }\n\n        if (includes(requiredFields, HostedFieldType.CardCodeVerification)) {\n            schemas.cardCodeVerification = this._getCardCodeVerificationSchema();\n            results.errors.cardCodeVerification = [];\n        }\n\n        if (includes(requiredFields, HostedFieldType.CardExpiry)) {\n            schemas.cardExpiry = this._getCardExpirySchema();\n            results.errors.cardExpiry = [];\n        }\n\n        if (includes(requiredFields, HostedFieldType.CardName)) {\n            schemas.cardName = this._getCardNameSchema();\n            results.errors.cardName = [];\n        }\n\n        if (includes(requiredFields, HostedFieldType.CardNumber)) {\n            schemas.cardNumber = this._getCardNumberSchema();\n            results.errors.cardNumber = [];\n        }\n\n        if (includes(requiredFields, HostedFieldType.CardNumberVerification)) {\n            schemas.cardNumberVerification = this._getCardNumberVerificationSchema();\n            results.errors.cardNumberVerification = [];\n        }\n\n        try {\n            await object(schemas)\n                .validate(values, { abortEarly: false });\n\n            return results;\n        } catch (error) {\n            if (error.name !== 'ValidationError') {\n                throw error;\n            }\n\n            return {\n                errors: (Object.keys(results.errors) as Array<keyof HostedInputValidateErrorDataMap>)\n                    .reduce((result, fieldType) => ({\n                        ...result,\n                        [fieldType]: (error as ValidationError).inner\n                            .filter(innerError => innerError.path === fieldType)\n                            .map(innerError => ({\n                                fieldType: innerError.path,\n                                message: innerError.errors.join(' '),\n                                type: innerError.type,\n                            })),\n                    }), {} as HostedInputValidateErrorDataMap),\n                isValid: false,\n            };\n        }\n    }\n\n    private _configureCardValidator(): void {\n        const discoverInfo = creditCardType.getTypeInfo('discover');\n        const visaInfo = creditCardType.getTypeInfo('visa');\n\n        // Need to support 13 digit PAN because some gateways only provide test credit card numbers in this format.\n        creditCardType.updateCard('visa', {\n            lengths: [13, ...(visaInfo.lengths || [])],\n        });\n\n        // Add support for 8-BIN Discover Cards.\n        creditCardType.updateCard('discover', {\n            patterns: [\n                ...(discoverInfo.patterns || []),\n                [810, 817],\n            ],\n        });\n    }\n\n    private _getCardCodeSchema(): StringSchema {\n        return string()\n            .required('CVV is required')\n            .test({\n                message: 'CVV must be valid',\n                name: 'invalid_card_code',\n                test(value) {\n                    const { card } = number((this.parent as HostedInputValues).cardNumber || '');\n\n                    return cvv(value, card && card.code ? card.code.size : undefined).isValid;\n                },\n            });\n    }\n\n    private _getCardCodeVerificationSchema(): StringSchema {\n        return string()\n            .required('CVV is required')\n            .test({\n                message: 'CVV must be valid',\n                name: 'invalid_card_code',\n                test: (value = '') => {\n                    const cardType = this._cardInstrument && this._mapFromInstrumentCardType(this._cardInstrument.brand);\n                    const cardInfo = cardType && creditCardType.getTypeInfo(cardType);\n\n                    return cvv(value, cardInfo && cardInfo.code ? cardInfo.code.size : undefined).isValid;\n                },\n            });\n    }\n\n    private _getCardExpirySchema(): StringSchema {\n        return string()\n            .required('Expiration date is required')\n            .test({\n                message: 'Expiration date must be a valid future date in MM / YY format',\n                name: 'invalid_card_expiry',\n                test: value => expirationDate(value).isValid,\n            });\n    }\n\n    private _getCardNameSchema(): StringSchema {\n        return string()\n            .max(200)\n            .required('Full name is required');\n    }\n\n    private _getCardNumberSchema(): StringSchema {\n        return string()\n            .required('Credit card number is required')\n            .test({\n                message: 'Credit card number must be valid',\n                name: 'invalid_card_number',\n                test: value => number(value).isValid,\n            });\n    }\n\n    private _getCardNumberVerificationSchema(): StringSchema {\n        return string()\n            .required('Credit card number is required')\n            .test({\n                message: 'Credit card number must be valid',\n                name: 'invalid_card_number',\n                test: (value = '') => number(value).isValid,\n            })\n            .test({\n                message: 'The card number entered does not match the card stored in your account',\n                name: 'mismatched_card_number',\n                test: (value = '') => this._cardInstrument ?\n                    value.slice(-this._cardInstrument.last4.length) === this._cardInstrument.last4 :\n                    false,\n            });\n    }\n\n    private _mapFromInstrumentCardType(type: string): string {\n        switch (type) {\n        case 'amex':\n        case 'american_express':\n            return 'american-express';\n\n        case 'diners':\n            return 'diners-club';\n\n        default:\n            return type;\n        }\n    }\n}\n","import { createClient as createBigpayClient } from '@bigcommerce/bigpay-client';\n\nimport { IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { PaymentRequestSender, PaymentRequestTransformer } from '../../payment';\nimport { CardInstrument } from '../../payment/instrument';\nimport HostedFieldType from '../hosted-field-type';\n\nimport CardExpiryFormatter from './card-expiry-formatter';\nimport CardNumberFormatter from './card-number-formatter';\nimport HostedAutocompleteFieldset from './hosted-autocomplete-fieldset';\nimport HostedCardExpiryInput from './hosted-card-expiry-input';\nimport HostedCardNumberInput from './hosted-card-number-input';\nimport HostedInput from './hosted-input';\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\nimport { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\nimport mapToAccessibilityLabel from './map-to-accessibility-label';\nimport mapToAutocompleteType from './map-to-autocomplete-type';\n\nexport default class HostedInputFactory {\n    constructor(\n        private _parentOrigin: string\n    ) {}\n\n    create(\n        containerId: string,\n        type: HostedFieldType,\n        styles: HostedInputStylesMap = {},\n        fontUrls: string[] = [],\n        placeholder: string = '',\n        accessibilityLabel: string = mapToAccessibilityLabel(type),\n        cardInstrument?: CardInstrument\n    ): HostedInput {\n        const autocomplete = mapToAutocompleteType(type);\n\n        if (type === HostedFieldType.CardNumber) {\n            return this._createNumberInput(containerId, styles, fontUrls, placeholder, accessibilityLabel, autocomplete);\n        }\n\n        if (type === HostedFieldType.CardNumberVerification) {\n            return this._createNumberInput(containerId, styles, fontUrls, placeholder, accessibilityLabel, autocomplete, cardInstrument);\n        }\n\n        if (type === HostedFieldType.CardExpiry) {\n            return this._createExpiryInput(containerId, styles, fontUrls, placeholder, accessibilityLabel, autocomplete);\n        }\n\n        if (type === HostedFieldType.CardCodeVerification) {\n            return this._createInput(type, containerId, styles, fontUrls, placeholder, accessibilityLabel, autocomplete, cardInstrument);\n        }\n\n        return this._createInput(type, containerId, styles, fontUrls, placeholder, accessibilityLabel, autocomplete);\n    }\n\n    private _createExpiryInput(\n        containerId:\n        string,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        placeholder: string,\n        accessibilityLabel: string = '',\n        autocomplete: string = ''\n    ): HostedCardExpiryInput {\n        return new HostedCardExpiryInput(\n            containerId,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            new IframeEventListener(this._parentOrigin),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(),\n            this._createPaymentHandler(),\n            new CardExpiryFormatter()\n        );\n    }\n\n    private _createNumberInput(\n        containerId: string,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        placeholder: string,\n        accessibilityLabel: string = '',\n        autocomplete: string = '',\n        cardInstrument?: CardInstrument\n    ): HostedCardNumberInput {\n        return new HostedCardNumberInput(\n            containerId,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            new IframeEventListener(this._parentOrigin),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(cardInstrument),\n            this._createPaymentHandler(cardInstrument),\n            new HostedAutocompleteFieldset(\n                containerId,\n                [HostedFieldType.CardCode, HostedFieldType.CardExpiry, HostedFieldType.CardName],\n                new HostedInputAggregator(window.parent)\n            ),\n            new CardNumberFormatter()\n        );\n    }\n\n    private _createInput(\n        type: HostedFieldType,\n        containerId: string,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        placeholder: string,\n        accessibilityLabel: string = '',\n        autocomplete: string = '',\n        cardInstrument?: CardInstrument\n    ): HostedInput {\n        return new HostedInput(\n            type,\n            containerId,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            new IframeEventListener(this._parentOrigin),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(cardInstrument),\n            this._createPaymentHandler(cardInstrument)\n        );\n    }\n\n    private _createPaymentHandler(\n        cardInstrument?: CardInstrument\n    ): HostedInputPaymentHandler {\n        return new HostedInputPaymentHandler(\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(cardInstrument),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new PaymentRequestSender(createBigpayClient()),\n            new PaymentRequestTransformer()\n        );\n    }\n}\n","import HostedFieldType from '../hosted-field-type';\n\nexport default function mapToAccessibilityLabel(type: HostedFieldType): string {\n    switch (type) {\n    case HostedFieldType.CardCode:\n    case HostedFieldType.CardCodeVerification:\n        return 'CVC';\n\n    case HostedFieldType.CardExpiry:\n        return 'Expiration';\n\n    case HostedFieldType.CardName:\n        return 'Name on card';\n\n    case HostedFieldType.CardNumber:\n    case HostedFieldType.CardNumberVerification:\n        return 'Credit card number';\n    }\n}\n","import { fromEvent } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { IframeEventListener } from '../../common/iframe';\nimport { HostedFieldAttachEvent, HostedFieldEventMap, HostedFieldEventType } from '../hosted-field-events';\n\nimport HostedInput from './hosted-input';\nimport HostedInputFactory from './hosted-input-factory';\n\ninterface EventTargetLike<TEvent> {\n    addListener(eventName: string, handler: (event: TEvent) => void): void;\n    removeListener(eventName: string, handler: (event: TEvent) => void): void;\n}\n\nexport default class HostedInputInitializer {\n    constructor(\n        private _factory: HostedInputFactory,\n        private _eventListener: IframeEventListener<HostedFieldEventMap>\n    ) {}\n\n    initialize(containerId: string): Promise<HostedInput> {\n        this._resetPageStyles(containerId);\n        this._eventListener.listen();\n\n        return fromEvent<HostedFieldAttachEvent>(\n            this._eventListener as EventTargetLike<HostedFieldAttachEvent>,\n            HostedFieldEventType.AttachRequested\n        )\n            .pipe(\n                map(({ payload }) => {\n                    const { accessibilityLabel, cardInstrument, fontUrls, placeholder, styles, type } = payload;\n                    const field = this._factory.create(containerId, type, styles, fontUrls, placeholder, accessibilityLabel, cardInstrument);\n\n                    field.attach();\n\n                    return field;\n                }),\n                take(1)\n            )\n            .toPromise();\n    }\n\n    private _resetPageStyles(containerId: string) {\n        const html = document.querySelector('html');\n        const body = document.querySelector('body');\n        const container = document.getElementById(containerId);\n\n        [html, body, container]\n            .forEach(node => {\n                if (!node) {\n                    return;\n                }\n\n                node.style.height = '100%';\n                node.style.width = '100%';\n                node.style.overflow = 'hidden';\n                node.style.padding = '0';\n                node.style.margin = '0';\n            });\n    }\n}\n","import { IframeEventListener } from '../../common/iframe';\nimport { HostedFieldEventMap } from '../hosted-field-events';\n\nimport HostedInput from './hosted-input';\nimport HostedInputFactory from './hosted-input-factory';\nimport HostedInputInitializer from './hosted-input-initializer';\nimport HostedInputOptions from './hosted-input-options';\n\nexport default function initializeHostedInput(options: HostedInputOptions): Promise<HostedInput> {\n    const { containerId, parentOrigin } = options;\n    const initializer = new HostedInputInitializer(\n        new HostedInputFactory(parentOrigin),\n        new IframeEventListener<HostedFieldEventMap>(parentOrigin)\n    );\n\n    return initializer.initialize(containerId);\n}\n","import { IframeEventPoster } from '../../common/iframe';\n\nimport { HostedInputAttachErrorEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputInitializeErrorData from './hosted-input-initialize-error-data';\n\nconst poster = new IframeEventPoster<HostedInputAttachErrorEvent>('*', window.parent);\n\nexport default function notifyInitializeError(error: HostedInputInitializeErrorData): void {\n    poster.post({\n        type: HostedInputEventType.AttachFailed,\n        payload: { error },\n    });\n}\n","export { initializeHostedInput, notifyInitializeError } from '../hosted-form/iframe-content';\n","module.exports = require(\"lodash\");","import { setPrototypeOf } from '../../utility';\n\nimport CustomError from './custom-error';\n\n/**\n * This error type should not be constructed directly. It is a base class for\n * all custom errors thrown in this library.\n */\nexport default abstract class StandardError extends Error implements CustomError {\n    name = 'StandardError';\n    type = 'standard';\n\n    constructor(message?: string) {\n        super(message || 'An unexpected error has occurred.');\n\n        setPrototypeOf(this, new.target.prototype);\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, new.target);\n        } else {\n            this.stack = (new Error(this.message)).stack;\n        }\n    }\n}\n","export default function setPrototypeOf(object: any, prototype: object) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","module.exports = require(\"card-validator\");","module.exports = require(\"rxjs\");","import { FormattedPayload, FormattedVaultedInstrument, HostedVaultedInstrument, PaymentInstrument, VaultedInstrument } from './payment';\n\nexport default function isVaultedInstrument(instrument: PaymentInstrument): instrument is VaultedInstrument {\n    return Boolean((instrument as VaultedInstrument).instrumentId);\n}\n\nexport function isHostedVaultedInstrument(instrument: PaymentInstrument): instrument is HostedVaultedInstrument {\n    return (\n        Boolean((instrument as HostedVaultedInstrument).instrumentId) &&\n        !instrument.hasOwnProperty('ccNumber') &&\n        !instrument.hasOwnProperty('ccCvv')\n    );\n}\n\nexport function isFormattedVaultedInstrument(instrument: PaymentInstrument): instrument is FormattedPayload<FormattedVaultedInstrument> {\n    const formattedInstrument = (instrument as FormattedPayload<FormattedVaultedInstrument>).formattedPayload;\n\n    if (!formattedInstrument) {\n        return false;\n    }\n\n    return typeof formattedInstrument.bigpay_token === 'string' ||\n        Boolean(formattedInstrument.bigpay_token && formattedInstrument.bigpay_token.token);\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { PaymentErrorData, PaymentErrorResponseBody } from '../../common/error';\nimport HostedFieldType from '../hosted-field-type';\n\nimport HostedInputInitializeErrorData from './hosted-input-initialize-error-data';\nimport HostedInputValidateResults from './hosted-input-validate-results';\n\n// Event types\nexport enum HostedInputEventType {\n    AttachSucceeded = 'HOSTED_INPUT:ATTACH_SUCCEEDED',\n    AttachFailed = 'HOSTED_INPUT:ATTACH_FAILED',\n    BinChanged = 'HOSTED_INPUT:BIN_CHANGED',\n    Blurred = 'HOSTED_INPUT:BLURRED',\n    Changed = 'HOSTED_INPUT:CHANGED',\n    CardTypeChanged = 'HOSTED_INPUT:CARD_TYPE_CHANGED',\n    Focused = 'HOSTED_INPUT:FOCUSED',\n    SubmitSucceeded = 'HOSTED_INPUT:SUBMIT_SUCCEEDED',\n    SubmitFailed = 'HOSTED_INPUT:SUBMIT_FAILED',\n    Validated = 'HOSTED_INPUT:VALIDATED',\n}\n\n// Event mapping\nexport interface HostedInputEventMap {\n    [HostedInputEventType.AttachSucceeded]: HostedInputAttachSuccessEvent;\n    [HostedInputEventType.AttachFailed]: HostedInputAttachErrorEvent;\n    [HostedInputEventType.BinChanged]: HostedInputBinChangeEvent;\n    [HostedInputEventType.Blurred]: HostedInputBlurEvent;\n    [HostedInputEventType.Changed]: HostedInputChangeEvent;\n    [HostedInputEventType.CardTypeChanged]: HostedInputCardTypeChangeEvent;\n    [HostedInputEventType.Focused]: HostedInputFocusEvent;\n    [HostedInputEventType.SubmitSucceeded]: HostedInputSubmitSuccessEvent;\n    [HostedInputEventType.SubmitFailed]: HostedInputSubmitErrorEvent;\n    [HostedInputEventType.Validated]: HostedInputValidateEvent;\n}\n\n// Events\nexport type HostedInputEvent = (\n    HostedInputAttachSuccessEvent |\n    HostedInputAttachErrorEvent |\n    HostedInputBinChangeEvent |\n    HostedInputBlurEvent |\n    HostedInputChangeEvent |\n    HostedInputCardTypeChangeEvent |\n    HostedInputFocusEvent |\n    HostedInputSubmitSuccessEvent |\n    HostedInputSubmitErrorEvent |\n    HostedInputValidateEvent\n);\n\nexport interface HostedInputAttachSuccessEvent {\n    type: HostedInputEventType.AttachSucceeded;\n}\n\nexport interface HostedInputAttachErrorEvent {\n    type: HostedInputEventType.AttachFailed;\n    payload: {\n        error: HostedInputInitializeErrorData;\n    };\n}\n\nexport interface HostedInputBinChangeEvent {\n    type: HostedInputEventType.BinChanged;\n    payload: {\n        bin?: string;\n    };\n}\n\nexport interface HostedInputBlurEvent {\n    type: HostedInputEventType.Blurred;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputChangeEvent {\n    type: HostedInputEventType.Changed;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputCardTypeChangeEvent {\n    type: HostedInputEventType.CardTypeChanged;\n    payload: {\n        cardType?: string;\n    };\n}\n\nexport interface HostedInputFocusEvent {\n    type: HostedInputEventType.Focused;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputSubmitSuccessEvent {\n    type: HostedInputEventType.SubmitSucceeded;\n}\n\nexport interface HostedInputSubmitErrorEvent {\n    type: HostedInputEventType.SubmitFailed;\n    payload: {\n        error: PaymentErrorData;\n        response?: Response<PaymentErrorResponseBody>;\n    };\n}\n\nexport interface HostedInputValidateEvent {\n    type: HostedInputEventType.Validated;\n    payload: HostedInputValidateResults;\n}\n","import IframeEvent from './iframe-event';\n\nexport default function isIframeEvent<TEvent extends IframeEvent<TType>, TType extends string>(\n    object: any,\n    type: TType\n): object is TEvent {\n    return object.type === type;\n}\n","import StandardError from './standard-error';\n\n/**\n * This error should be thrown when a method is unable to proceed because the\n * caller has not provided all the arguments according to their requirements,\n * i.e.: if an argument is missing or it is not the expected data type.\n */\nexport default class InvalidArgumentError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Invalid arguments have been provided.');\n\n        this.name = 'InvalidArgumentError';\n        this.type = 'invalid_argument';\n    }\n}\n","export const HOSTED = 'PAYMENT_TYPE_HOSTED';\nexport const OFFLINE = 'PAYMENT_TYPE_OFFLINE';\n","import { isBillingAddressLike, BillingAddress } from '../billing';\nimport { Consignment } from '../shipping';\n\nimport Address from './address';\nimport InternalAddress from './internal-address';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalAddress(\n    address: Address | BillingAddress,\n    consignments?: Consignment[]\n): InternalAddress<any> {\n    let addressId;\n\n    if (isBillingAddressLike(address)) {\n        addressId = address.id;\n    } else if (consignments && consignments.length) {\n        addressId = consignments[0].id;\n    }\n\n    return {\n        id: addressId,\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        addressLine1: address.address1,\n        addressLine2: address.address2,\n        city: address.city,\n        province: address.stateOrProvince,\n        provinceCode: address.stateOrProvinceCode,\n        postCode: address.postalCode,\n        country: address.country,\n        countryCode: address.countryCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    };\n}\n","import { Address } from '../address';\n\nimport BillingAddress from './billing-address';\n\nexport default function isBillingAddressLike(address: Address): address is BillingAddress {\n    const billingAddress = address as BillingAddress;\n\n    return typeof billingAddress.id !== 'undefined';\n}\n","import InternalLineItem from './internal-line-item';\nimport { LineItem } from './line-item';\nimport LineItemMap from './line-item-map';\nimport mapGiftCertificateToInternalLineItem from './map-gift-certificate-to-internal-line-item';\nimport mapToInternalLineItem from './map-to-internal-line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItems(\n    itemMap: LineItemMap,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem[] {\n    return (Object.keys(itemMap) as Array<keyof LineItemMap>)\n        .reduce((result, key) => [\n            ...result,\n            ...(itemMap[key] as LineItem[]).map((item: any) => {\n                if (key === 'giftCertificates') {\n                    return mapGiftCertificateToInternalLineItem(item, decimalPlaces);\n                }\n\n                return mapToInternalLineItem(\n                    item,\n                    mapToInternalLineItemType(key),\n                    decimalPlaces,\n                    idKey\n                );\n            }),\n        ], [] as InternalLineItem[]);\n}\n\nfunction mapToInternalLineItemType(type: string): string {\n    switch (type) {\n        case 'physicalItems':\n            return 'ItemPhysicalEntity';\n\n        case 'digitalItems':\n            return 'ItemDigitalEntity';\n\n        case 'giftCertificates':\n            return 'ItemGiftCertificateEntity';\n\n        default:\n            return '';\n    }\n}\n","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { GiftCertificateItem } from './line-item';\n\nexport default function mapGiftCertificateToInternalLineItem(\n    item: GiftCertificateItem,\n    decimalPlaces: number\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: item.id,\n        imageUrl: '',\n        name: item.name,\n        amount: item.amount,\n        amountAfterDiscount: item.amount,\n        discount: 0,\n        integerAmount: amountTransformer.toInteger(item.amount),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerUnitPrice: amountTransformer.toInteger(item.amount),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerDiscount: 0,\n        quantity: 1,\n        sender: item.sender,\n        recipient: item.recipient,\n        type: 'ItemGiftCertificateEntity',\n        attributes: [],\n        variantId: null,\n    };\n}\n","import { CardInstrument } from '../payment/instrument';\n\nimport HostedFieldType from './hosted-field-type';\nimport { HostedFieldStylesMap } from './hosted-form-options';\nimport HostedFormOrderData from './hosted-form-order-data';\n\nexport enum HostedFieldEventType {\n    AttachRequested = 'HOSTED_FIELD:ATTACH_REQUESTED',\n    SubmitRequested = 'HOSTED_FIELD:SUBMITTED_REQUESTED',\n    ValidateRequested = 'HOSTED_FIELD:VALIDATE_REQUESTED',\n}\n\nexport interface HostedFieldEventMap {\n    [HostedFieldEventType.AttachRequested]: HostedFieldAttachEvent;\n    [HostedFieldEventType.SubmitRequested]: HostedFieldSubmitRequestEvent;\n    [HostedFieldEventType.ValidateRequested]: HostedFieldValidateRequestEvent;\n}\n\nexport type HostedFieldEvent = (\n    HostedFieldAttachEvent |\n    HostedFieldSubmitRequestEvent |\n    HostedFieldValidateRequestEvent\n);\n\nexport interface HostedFieldAttachEvent {\n    type: HostedFieldEventType.AttachRequested;\n    payload: {\n        accessibilityLabel?: string;\n        cardInstrument?: CardInstrument;\n        fontUrls?: string[];\n        placeholder?: string;\n        styles?: HostedFieldStylesMap;\n        type: HostedFieldType;\n    };\n}\n\nexport interface HostedFieldSubmitRequestEvent {\n    type: HostedFieldEventType.SubmitRequested;\n    payload: {\n        data: HostedFormOrderData;\n        fields: HostedFieldType[];\n    };\n}\n\nexport interface HostedFieldValidateRequestEvent {\n    type: HostedFieldEventType.ValidateRequested;\n}\n","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { DigitalItem, LineItem } from './line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItem(\n    item: LineItem,\n    type: string,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: (item[idKey] as string | number),\n        imageUrl: item.imageUrl,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        discount: item.discountAmount,\n        integerAmount: amountTransformer.toInteger(item.extendedListPrice),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.extendedSalePrice),\n        integerDiscount: amountTransformer.toInteger(item.discountAmount),\n        integerUnitPrice: amountTransformer.toInteger(item.listPrice),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.salePrice),\n        downloadsPageUrl: (item as DigitalItem).downloadPageUrl,\n        name: item.name,\n        quantity: item.quantity,\n        brand: item.brand,\n        sku: item.sku,\n        categoryNames: item.categoryNames,\n        variantId: item.variantId,\n        productId: item.productId,\n        attributes: (item.options || []).map(option => ({\n            name: option.name,\n            value: option.value,\n        })),\n        addedByPromotion: item.addedByPromotion,\n        type,\n    };\n}\n","import InternalShippingOption from './internal-shipping-option';\nimport ShippingOption from './shipping-option';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalShippingOption(option: ShippingOption, isSelected: boolean): InternalShippingOption {\n    return {\n        description: option.description,\n        module: option.type,\n        price: option.cost,\n        id: option.id,\n        selected: isSelected,\n        isRecommended: option.isRecommended,\n        imageUrl: option.imageUrl,\n        transitTime: option.transitTime,\n    };\n}\n","export default class AmountTransformer {\n    constructor(private _decimalPlaces: number) {}\n\n    toInteger(amount: number): number {\n        return Math.round(amount * Math.pow(10, this._decimalPlaces));\n    }\n}\n","import { InvalidArgumentError } from '../error/errors';\n\nimport Url from './url';\n\nexport default function parseUrl(url: string): Url {\n    if (!/^(https?:)?\\/\\//.test(url)) {\n        throw new InvalidArgumentError('The provided URL must be absolute.');\n    }\n\n    // new URL() is not supported in IE11, use anchor tag instead\n    const anchor = document.createElement('a');\n\n    anchor.href = url;\n\n    // IE11 returns 80 or 443 for the port number depending on the URL scheme,\n    // even if the port number is not specified in the URL.\n    const port = anchor.port && url.indexOf(`${anchor.hostname}:${anchor.port}`) !== -1 ?\n        anchor.port :\n        '';\n\n    return {\n        hash: anchor.hash,\n        hostname: anchor.hostname,\n        href: anchor.href,\n        origin: `${anchor.protocol}//${anchor.hostname}${port ? ':' + port : ''}`,\n        pathname: anchor.pathname,\n        port,\n        protocol: anchor.protocol,\n        search: anchor.search,\n    };\n}\n","module.exports = require(\"yup\");","module.exports = require(\"rxjs/operators\");","/**\n * Decorates a class or a method by binding all its prototype methods or itself\n * to the calling instance respectively.\n */\nfunction bindDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T>;\nfunction bindDecorator<T extends Constructor<object>>(target: T): T;\nfunction bindDecorator(target: any, key?: any, descriptor?: any): any {\n    if (!key || !descriptor) {\n        return bindClassDecorator(target);\n    }\n\n    return bindMethodDecorator(target, key, descriptor);\n}\n\nexport default bindDecorator;\n\n/**\n * Decorates a class by binding all its prototype methods to the calling\n * instance.\n */\nexport function bindClassDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype)\n        .forEach(key => {\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n            if (!descriptor || key === 'constructor') {\n                return;\n            }\n\n            Object.defineProperty(\n                decoratedTarget.prototype,\n                key,\n                bindMethodDecorator(target.prototype, key, descriptor)\n            );\n        });\n\n    return decoratedTarget;\n}\n\n/**\n * Decorates a method by binding it to the calling instance.\n */\nexport function bindMethodDecorator<T extends Method>(_: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let method: T = descriptor.value;\n\n    return {\n        get() {\n            const boundMethod = method.bind(this) as T;\n\n            Object.defineProperty(this, key, {\n                ...descriptor,\n                value: boundMethod,\n            });\n\n            return boundMethod;\n        },\n        set(value) {\n            method = value;\n        },\n    };\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\nexport type Method = (...args: any[]) => any;\n","import { mapToInternalAddress } from '../address';\nimport { BillingAddress } from '../billing';\n\nimport { Customer } from '.';\nimport InternalCustomer from './internal-customer';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCustomer(customer: Customer, billingAddress: BillingAddress): InternalCustomer {\n    const firstName = customer.firstName || billingAddress.firstName || '';\n    const lastName = customer.lastName || billingAddress.lastName || '';\n\n    return {\n        addresses: (customer.addresses || []).map(address => mapToInternalAddress(address)),\n        customerId: customer.id,\n        isGuest: customer.isGuest,\n        storeCredit: customer.storeCredit,\n        email: customer.email || billingAddress.email || '',\n        firstName,\n        lastName,\n        name: customer.fullName || [firstName, lastName].join(' '),\n        customerGroupName: customer.customerGroup && customer.customerGroup.name,\n    };\n}\n","import { filter, find, keyBy, reduce } from 'lodash';\n\nimport { mapToInternalLineItems, LineItem } from '../cart';\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon } from '../coupon';\nimport { HOSTED } from '../payment';\n\nimport InternalOrder, { InternalGiftCertificateList, InternalIncompleteOrder, InternalOrderPayment, InternalSocialDataList } from './internal-order';\nimport Order, { GatewayOrderPayment, GiftCertificateOrderPayment, OrderPayment, OrderPayments } from './order';\nimport { OrderMetaState } from './order-state';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalOrder(order: Order, orderMeta: OrderMetaState = {}): InternalOrder {\n    const decimalPlaces = order.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: order.orderId,\n        items: mapToInternalLineItems(order.lineItems, order.currency.decimalPlaces, 'productId'),\n        orderId: order.orderId,\n        currency: order.currency.code,\n        customerCanBeCreated: order.customerCanBeCreated,\n        payment: mapToInternalOrderPayment(order.payments, orderMeta.payment),\n        subtotal: {\n            amount: order.baseAmount,\n            integerAmount: amountTransformer.toInteger(order.baseAmount),\n        },\n        coupon: {\n            discountedAmount: reduce(order.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: order.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: order.discountAmount,\n            integerAmount: amountTransformer.toInteger(order.discountAmount),\n        },\n        token: orderMeta.orderToken,\n        callbackUrl: orderMeta.callbackUrl,\n        discountNotifications: [],\n        giftCertificate: mapToGiftCertificates(order.payments),\n        socialData: mapToInternalSocialDataList(order),\n        status: order.status,\n        hasDigitalItems: order.hasDigitalItems,\n        isDownloadable: order.isDownloadable,\n        isComplete: order.isComplete,\n        shipping: {\n            amount: order.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.shippingCostTotal),\n            amountBeforeDiscount: order.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(order.shippingCostBeforeDiscount),\n        },\n        storeCredit: {\n            amount: mapToStoreCredit(order.payments),\n        },\n        taxes: order.taxes,\n        taxTotal: {\n            amount: order.taxTotal,\n            integerAmount: amountTransformer.toInteger(order.taxTotal),\n        },\n        handling: {\n            amount: order.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: order.orderAmount,\n            integerAmount: order.orderAmountAsInteger,\n        },\n    };\n}\n\nexport function mapToInternalIncompleteOrder(checkout: Checkout): InternalIncompleteOrder {\n    const payment = find(checkout.payments, { providerType: HOSTED });\n\n    return {\n        orderId: null,\n        isComplete: false,\n        payment: !payment ? {} : {\n            id: payment.providerId,\n            gateway: payment.gatewayId,\n            status: mapToInternalPaymentStatus(payment.detail.step),\n        },\n    };\n}\n\nfunction mapToInternalPaymentStatus(status: string): string {\n    return `PAYMENT_STATUS_${status}`;\n}\n\nfunction mapToStoreCredit(payments?: OrderPayments): number {\n    const item = find(payments, { providerId: 'storecredit' });\n\n    return item ? item.amount : 0;\n}\n\nfunction mapToGiftCertificates(payments?: OrderPayments): InternalGiftCertificateList {\n    const items = filter(payments, { providerId: 'giftcertificate' }) as GiftCertificateOrderPayment[];\n\n    return {\n        totalDiscountedAmount: reduce(items, (sum, item) => item.amount + sum, 0),\n        appliedGiftCertificates: keyBy(items.map(item => ({\n            code: item.detail.code,\n            discountedAmount: item.amount,\n            remainingBalance: item.detail.remaining,\n            giftCertificate: {\n                balance: item.amount + item.detail.remaining,\n                code: item.detail.code,\n                purchaseDate: '',\n            },\n        })), 'code'),\n    };\n}\n\nfunction mapToInternalOrderPayment(payments?: OrderPayments, payment: InternalOrderPayment = {}): InternalOrderPayment {\n    const item = find(payments, isDefaultOrderPayment) as GatewayOrderPayment;\n\n    if (!item) {\n        return {};\n    }\n\n    return {\n        id: item.providerId,\n        status: mapToInternalPaymentStatus(item.detail.step),\n        helpText: item.detail.instructions,\n        returnUrl: payment.returnUrl,\n    };\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return payment.providerId !== 'giftcertificate' && payment.providerId !== 'storecredit';\n}\n\nfunction mapToInternalSocialDataList(order: Order): { [itemId: string]: InternalSocialDataList } | undefined {\n    const socialDataObject: { [itemId: string]: InternalSocialDataList } = {};\n    const items = [\n        ...order.lineItems.physicalItems,\n        ...order.lineItems.digitalItems,\n    ];\n\n    items.forEach(item => {\n        socialDataObject[item.id] = mapToInternalSocialData(item);\n    });\n\n    return socialDataObject;\n}\n\nfunction mapToInternalSocialData(lineItem: LineItem): InternalSocialDataList {\n    const codes = ['fb', 'tw', 'gp'];\n\n    return codes.reduce((socialData, code) => {\n        const item = lineItem.socialMedia && find(lineItem.socialMedia, item => item.code === code);\n\n        if (!item) {\n            return socialData;\n        }\n\n        socialData[code] = {\n            name: lineItem.name,\n            description: lineItem.name,\n            image: lineItem.imageUrl,\n            url: item.link,\n            shareText: item.text,\n            sharingLink: item.link,\n            channelName: item.channel,\n            channelCode: item.code,\n        };\n\n        return socialData;\n    }, {} as InternalSocialDataList);\n}\n","import { keyBy, reduce, some } from 'lodash';\n\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon, mapToInternalGiftCertificate } from '../coupon';\nimport { mapToDiscountNotifications } from '../promotion';\n\nimport InternalCart from './internal-cart';\nimport mapToInternalLineItems from './map-to-internal-line-items';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCart(checkout: Checkout): InternalCart {\n    const decimalPlaces = checkout.cart.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: checkout.cart.id,\n        items: mapToInternalLineItems(checkout.cart.lineItems, decimalPlaces),\n        currency: checkout.cart.currency.code,\n        coupon: {\n            discountedAmount: reduce(checkout.cart.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: checkout.cart.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: checkout.cart.discountAmount,\n            integerAmount: amountTransformer.toInteger(checkout.cart.discountAmount),\n        },\n        discountNotifications: mapToDiscountNotifications(checkout.promotions),\n        giftCertificate: {\n            totalDiscountedAmount: reduce(checkout.giftCertificates, (sum, certificate) => {\n                return sum + certificate.used;\n            }, 0),\n            appliedGiftCertificates: keyBy(checkout.giftCertificates.map(mapToInternalGiftCertificate), 'code'),\n        },\n        shipping: {\n            amount: checkout.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.shippingCostTotal),\n            amountBeforeDiscount: checkout.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(checkout.shippingCostBeforeDiscount),\n            required: some(checkout.cart.lineItems.physicalItems, lineItem => lineItem.isShippingRequired),\n        },\n        subtotal: {\n            amount: checkout.subtotal,\n            integerAmount: amountTransformer.toInteger(checkout.subtotal),\n        },\n        storeCredit: {\n            amount: checkout.customer ? checkout.customer.storeCredit : 0,\n        },\n        taxSubtotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        taxes: checkout.taxes,\n        taxTotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        handling: {\n            amount: checkout.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: checkout.grandTotal,\n            integerAmount: amountTransformer.toInteger(checkout.grandTotal),\n        },\n    };\n}\n","import { DiscountNotification } from '../discount';\n\nimport { Promotion } from '.';\n\nexport default function mapToDiscountNotifications(promotions?: Promotion[]): DiscountNotification[] {\n    const notifications: DiscountNotification[] = [];\n\n    (promotions || []).forEach(promotion => {\n        (promotion.banners || []).forEach(banner => {\n            notifications.push({\n                placeholders: [],\n                discountType: null,\n                message: '',\n                messageHtml: banner.text,\n            });\n        });\n    });\n\n    return notifications;\n}\n","module.exports = require(\"@bigcommerce/bigpay-client\");","import CardExpiryDate from './card-expiry-date';\n\nconst NUMBER_SEPARATOR = '/';\n\nexport default class CardExpiryFormatter {\n    format(value: string): string {\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\n        const trimmedMonth = month.slice(0, 2);\n        const trimmedYear = year.length === 4 ? year.slice(-2) : (year ? year.slice(0, 2) : month.slice(2));\n\n        // i.e.: '1'\n        if (value.length < 2) {\n            return month;\n        }\n\n        // ie.: '10 /' (without trailing space)\n        if (value.length > 3 && !trimmedYear) {\n            return trimmedMonth;\n        }\n\n        return `${trimmedMonth} ${NUMBER_SEPARATOR} ${trimmedYear}`;\n    }\n\n    toObject(value: string): CardExpiryDate {\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\n\n        if (!/^\\d+$/.test(month) || !/^\\d+$/.test(year)) {\n            return { month: '', year: '' };\n        }\n\n        return {\n            month: month.length === 1 ? `0${month}` : month.slice(0, 2),\n            year: year.length === 2 ? `20${year}` : year.slice(0, 4),\n        };\n    }\n}\n","import { creditCardType, number } from 'card-validator';\nimport { max } from 'lodash';\n\nconst NUMBER_SEPARATOR = ' ';\n\nexport default class CardNumberFormatter {\n    format(value: string): string {\n        const { card } = number(value);\n\n        if (!card) {\n            return value;\n        }\n\n        const maxLength = max(creditCardType(value).map(info => max(info.lengths)));\n        const unformattedValue = this.unformat(value).slice(0, maxLength);\n\n        return card.gaps\n            .filter(gapIndex => unformattedValue.length > gapIndex)\n            .reduce((output, gapIndex, index) => (\n                [\n                    output.slice(0, gapIndex + index),\n                    output.slice(gapIndex + index),\n                ].join(NUMBER_SEPARATOR)\n            ), unformattedValue);\n    }\n\n    unformat(value: string): string {\n        const { card } = number(value);\n\n        if (!card) {\n            return value;\n        }\n\n        return value.replace(new RegExp(NUMBER_SEPARATOR, 'g'), '');\n    }\n}\n","import Coupon from './coupon';\nimport InternalCoupon from './internal-coupon';\n\nconst couponTypes = [\n    'per_item_discount',\n    'percentage_discount',\n    'per_total_discount',\n    'shipping_discount',\n    'free_shipping',\n];\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCoupon(coupon: Coupon): InternalCoupon {\n    return {\n        code: coupon.code,\n        discount: coupon.displayName,\n        discountType: couponTypes.indexOf(coupon.couponType),\n    };\n}\n"],"sourceRoot":""}