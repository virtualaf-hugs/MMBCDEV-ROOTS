{"version":3,"sources":["../../src/payment/offsite-payment-initializer.js"],"names":["OffsitePaymentInitializer","config","urlHelper","UrlHelper","create","formPoster","payloadMapper","PayloadMapper","data","callback","target","paymentMethod","type","HOSTED","Error","payload","mapToPayload","url","getOffsitePaymentUrl","postForm"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;;;;;IAEqBA,yB;;;;AACjB;;;;2BAIcC,M,EAAQ;AAClB,UAAMC,YAAYC,oBAAUC,MAAV,CAAiBH,MAAjB,CAAlB;AACA,UAAMI,aAAa,mCAAnB;AACA,UAAMC,gBAAgBC,wBAAcH,MAAd,EAAtB;;AAEA,aAAO,IAAIJ,yBAAJ,CAA8BE,SAA9B,EAAyCG,UAAzC,EAAqDC,aAArD,CAAP;AACH;;AAED;;;;;;;;;AAMA,qCAAYJ,SAAZ,EAAuBG,UAAvB,EAAmCC,aAAnC,EAAkD;AAAA;;AAC9C;;;;AAIA,SAAKJ,SAAL,GAAiBA,SAAjB;;AAEA;;;;AAIA,SAAKG,UAAL,GAAkBA,UAAlB;;AAEA;;;;AAIA,SAAKC,aAAL,GAAqBA,aAArB;AACH;;AAED;;;;;;;;;;;6CAOyBE,I,EAAMC,Q,EAAUC,M,EAAQ;AAAA,gCACdF,IADc,CACrCG,aADqC;AAAA,UACrCA,aADqC,uCACrB,EADqB;;;AAG7C,UAAIA,cAAcC,IAAd,KAAuBC,oBAA3B,EAAmC;AAC/B,cAAM,IAAIC,KAAJ,CAAaH,cAAcC,IAA3B,wBAAN;AACH;;AAED,UAAMG,UAAU,KAAKT,aAAL,CAAmBU,YAAnB,CAAgCR,IAAhC,CAAhB;AACA,UAAMS,MAAM,KAAKf,SAAL,CAAegB,oBAAf,EAAZ;;AAEA,WAAKb,UAAL,CAAgBc,QAAhB,CAAyBF,GAAzB,EAA8BF,OAA9B,EAAuCN,QAAvC,EAAiDC,MAAjD;AACH;;;;;;kBAzDgBV,yB","file":"offsite-payment-initializer.js","sourcesContent":["import { createFormPoster } from '@bigcommerce/form-poster';\nimport { HOSTED } from './payment-types';\nimport PayloadMapper from './offsite-payment-mappers/payload-mapper';\nimport UrlHelper from './url-helper';\n\nexport default class OffsitePaymentInitializer {\n    /**\n     * @param {Object} config\n     * @returns {OffsitePaymentInitializer}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const formPoster = createFormPoster();\n        const payloadMapper = PayloadMapper.create();\n\n        return new OffsitePaymentInitializer(urlHelper, formPoster, payloadMapper);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {FormPoster} formPoster\n     * @param {PayloadMapper} payloadMapper\n     * @returns {void}\n     */\n    constructor(urlHelper, formPoster, payloadMapper) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {FormPoster}\n         */\n        this.formPoster = formPoster;\n\n        /**\n         * @private\n         * @type {PayloadMapper}\n         */\n        this.payloadMapper = payloadMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @param {string} target\n     * @returns {void}\n     * @throws {Error}\n     */\n    initializeOffsitePayment(data, callback, target) {\n        const { paymentMethod = {} } = data;\n\n        if (paymentMethod.type !== HOSTED) {\n            throw new Error(`${paymentMethod.type} is not supported.`);\n        }\n\n        const payload = this.payloadMapper.mapToPayload(data);\n        const url = this.urlHelper.getOffsitePaymentUrl();\n\n        this.formPoster.postForm(url, payload, callback, target);\n    }\n}\n"]}